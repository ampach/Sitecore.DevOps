apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "id.fullname" . }}
  labels:    
    {{- include "id.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: {{ .Values.strategy.type }}
  selector:
    matchLabels:
      app: {{ include "id.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "id.fullname" . }}
        {{- include "id.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            runAsGroup: 3000
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: Database_Server
              valueFrom:
                secretKeyRef:
                  name: sitecore-database
                  key: Database_Server
            - name: Core_Database_Username
              valueFrom:
                configMapKeyRef:
                  name: global-config-env-file
                  key: Core_Database_Username
            - name: Core_Database_Password
              valueFrom:
                secretKeyRef:
                  name: sitecore-database
                  key: Core_Database_Password
            - name: Sitecore_Sitecore__IdentityServer__Clients__PasswordClient__ClientSecrets__ClientSecret1
              valueFrom:
                secretKeyRef:
                  name: sitecore-identity
                  key: Sitecore_ConnectionStrings_Sitecoreidentity_Secret
            - name: Sitecore_Sitecore__IdentityServer__CertificateRawData
              valueFrom:
                secretKeyRef:
                  name: sitecore-identity
                  key: IDENTITY_CERTIFICATE
            - name: Sitecore_Sitecore__IdentityServer__CertificateRawDataPassword
              valueFrom:
                secretKeyRef:
                  name: sitecore-identity
                  key: IDENTITY_CERTIFICATE_PASSWORD
            - name: Sitecore_License
              valueFrom:
                secretKeyRef:
                  name: sitecore-license
                  key: Sitecore_License
            - name: Sitecore_Sitecore__IdentityServer__SitecoreMemberShipOptions__ConnectionString
              value: Data Source=$(Database_Server);Initial Catalog=Sitecore.Core;User ID=$(Core_Database_Username);Password=$(Core_Database_Password);
            {{- with (first .Values.global.cm.ingress.hosts) }}
            - name: Sitecore_Sitecore__IdentityServer__AccountOptions__PasswordRecoveryUrl
              value: {{ printf "https://%s/sitecore/login?rc=1" .host }}
            {{- end }}
            {{- range $index, $value := .Values.global.cm.ingress.hosts }}
            - name: {{ printf "Sitecore_Sitecore__IdentityServer__Clients__DefaultClient__AllowedCorsOrigins__AllowedCorsOriginsGroup%s" (add1 $index | toString) }}
              value: {{ printf "https://%s" $value.host }}
            {{- end }}            
            {{- with (first .Values.global.id.ingress.hosts) }}
            - name: Sitecore_Sitecore__IdentityServer__PublicOrigin
              value: {{ printf "https://%s" .host }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 80
              httpHeaders:
              - name: X-Kubernetes-Probe
                value: Liveness
            timeoutSeconds: 300
            periodSeconds: 30
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 80
              httpHeaders:
              - name: X-Kubernetes-Probe
                value: Startup
            timeoutSeconds: 300
            periodSeconds: 30
            failureThreshold: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      tolerations:
      - key: "workload"
        value: "win"
        effect: "NoSchedule"