name: Init Sitecore

on:  
  workflow_dispatch: 
    inputs:
      environment:
        description: 'Environment to run build and deploy against'
        type: environment
        required: true 

jobs:

  setup-azure:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:    
      - name: Azure Login
        uses: Azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Add Helm repository
        id: add-static-ip
        shell: pwsh
        run: |
          echo ${{secrets.AZURE_KV_NAME}}
          echo ${{secrets.RESOURCE_GROUP}}
          echo ${{secrets.CLUSTER_NAME}}
          echo ${{secrets.SUBSCRIPTION_ID}}
          $clusterRG = az aks show --resource-group ${{secrets.RESOURCE_GROUP}} --name ${{secrets.CLUSTER_NAME}} --query nodeResourceGroup -o tsv
          $staticIpObject = az network public-ip create --resource-group $clusterRG --name ClusterStaticIP --sku Standard --allocation-method static | ConvertFrom-Json
          $staticIP = $staticIpObject.publicIp.ipAddress    
          "ip=$staticIP" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

    outputs:
      staticIP: ${{ steps.add-static-ip.outputs.ip }}
  
  cluster-init:    
    needs: [setup-azure]
    uses: ./.github/workflows/_deploy-helm-package-to-aks.yml
    secrets: 
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      RESOURCE_GROUP: ${{secrets.RESOURCE_GROUP}}
      CLUSTER_NAME: ${{secrets.CLUSTER_NAME}}
      SUBSCRIPTION_ID: ${{secrets.SUBSCRIPTION_ID}}
      ARGS: --set ingress-nginx.controller.service.loadBalancerIP=${{needs.setup-azure.outputs.staticIP}} --set keyvault.clientID=${{secrets.USER_ASSIGNED_CLIENT_ID}} --set keyvault.keyvaultName=${{secrets.AZURE_KV_NAME}}  --set keyvault.tenantId=${{secrets.AZURE_KV_TENANT_ID}} --set keyvault.envNamespace=${{secrets.ENVIRONMENT_NAMESPACE}} --set keyvault.serviceAccpuntName=${{secrets.SERVICE_ACCOUNT_NAME}}
    with:
      helm_repo_url: https://ampach.github.io/Helm-Charts
      helm_repo_name: ampach
      chart_name: cluster-init
      namespace: kube-system
      environment: ${{ inputs.environment }}
