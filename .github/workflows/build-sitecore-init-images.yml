name: Build Sitecore Init images

on:
  workflow_dispatch: 
    inputs:
      environment:
        description: 'Environment to run build and deploy against'
        type: environment
        required: true 

jobs:

  build:

    runs-on: windows-2019
    
    environment: ${{ inputs.environment }}
      
    steps:
    
      - uses: actions/checkout@v3

      - name: Get Environment Specific variables
        shell: bash
        id: env_vars
        run: |
          echo "helm_repo_upload_url=${{ vars.VELUX_HELM_REPO_UPLOAD_URL }}" >> $GITHUB_OUTPUT
          echo "helm_repo=${{ vars.VELUX_HELM_REPO_URL }}" >> $GITHUB_OUTPUT    
      
      - name: Login to Velux jFrog
        run: |
          docker login velux.jfrog.io --username ${{ secrets.JFROG_DOCKER_USER }} --password ${{  secrets.JFROG_DOCKER_PASSWORD }}

      - name: Build MSSQL-INIT Docker image
        run: |
          docker build ./docker/build/mssql-init `
            --tag ${{ vars.COMPOSE_PROJECT_NAME }}-xm1-mssql-init:${{ vars.SITECORE_VERSION }} `
            --build-arg PARENT_IMAGE=${{ vars.VELUX_DOCKER_CONTAINER_REGESRTY }}sitecore-xm1-mssql-init:${{ vars.SITECORE_VERSION }} `
            --build-arg HEADLESS_SERVICES_IMAGE=${{ vars.VELUX_DOCKER_CONTAINER_REGESRTY }}sitecore-headless-services-xm1-assets:${{ vars.HEADLESS_SERVICES_VERSION }} `
            --build-arg SPE_IMAGE=${{ vars.VELUX_DOCKER_CONTAINER_REGESRTY }}sitecore-spe-assets:${{ vars.SPE_VERSION }}
          
          docker tag ${{ vars.COMPOSE_PROJECT_NAME }}-xm1-mssql-init:${{ vars.SITECORE_VERSION }} ` ${{ vars.VELUX_DOCKER_LOCAL_CONTAINER_REGESRTY }}${{ vars.COMPOSE_PROJECT_NAME }}-xm1-mssql-init:${{ vars.SITECORE_VERSION }}
          docker tag ${{ vars.COMPOSE_PROJECT_NAME }}-xm1-mssql-init:${{ vars.SITECORE_VERSION }} ` ${{ vars.VELUX_DOCKER_LOCAL_CONTAINER_REGESRTY }}${{ vars.COMPOSE_PROJECT_NAME }}-xm1-mssql-init:latest          
          docker push ${{ vars.VELUX_DOCKER_LOCAL_CONTAINER_REGESRTY }}${{ vars.COMPOSE_PROJECT_NAME }}-xm1-mssql-init:${{ vars.SITECORE_VERSION }}

      - name: Build NODE.JS Docker image
        run: |
          docker build . --file docker/build/nodejs/Dockerfile `
            --tag ${{ vars.COMPOSE_PROJECT_NAME }}-nodejs:${{ vars.NODEJS_VERSION }} `
            --build-arg PARENT_IMAGE=${{ vars.VELUX_DOCKER_CONTAINER_REGESRTY }}servercore:1809 `
            --build-arg NODEJS_VERSION=${{ vars.NODEJS_VERSION }}
          
          docker tag ${{ vars.COMPOSE_PROJECT_NAME }}-nodejs:${{ vars.NODEJS_VERSION }} ` ${{ vars.VELUX_DOCKER_LOCAL_CONTAINER_REGESRTY }}${{ vars.COMPOSE_PROJECT_NAME }}-nodejs:${{ vars.NODEJS_VERSION }}
          docker tag ${{ vars.COMPOSE_PROJECT_NAME }}-nodejs:${{ vars.NODEJS_VERSION }} ` ${{ vars.VELUX_DOCKER_LOCAL_CONTAINER_REGESRTY }}${{ vars.COMPOSE_PROJECT_NAME }}-nodejs:latest    
          docker push ${{ vars.VELUX_DOCKER_LOCAL_CONTAINER_REGESRTY }}${{ vars.COMPOSE_PROJECT_NAME }}-nodejs:${{ vars.NODEJS_VERSION }}
        
    outputs:
      helm_repo: ${{ steps.env_vars.outputs.helm_repo }}
      helm_repo_upload_url: ${{ steps.env_vars.outputs.helm_repo_upload_url }}

 
  build-and-push-helm-package:
    uses: ./.github/workflows/_build-and-push-helm-package.yml
    needs: [build]
    secrets: inherit
    with:
      tag_version: "2.0.0"
      helm_repo_upload_url: ${{needs.build.outputs.helm_repo_upload_url}}
      chart_path: Helm/sitecore-init
      
#  sitecore-init:
#    uses: ./.github/workflows/_deploy-helm-package.yml
#    needs: [build, build-and-push-helm-package]
#    secrets: 
#      K8S_SHARED_DEV_DEPLOY: ${{ secrets.K8S_SHARED_DEV_DEPLOY }}
#      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
#      CLUSTERNAME: ${{ secrets.CLUSTERNAME }}
#      SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
#      JFROG_HELM_USERNAME: ${{ secrets.JFROG_HELM_USER }}
#      JFROG_HELM_PASSWORD: ${{ secrets.JFROG_HELM_PASSWORD }}
#    with: 
#      helm_repo: ${{needs.build.outputs.helm_repo}}
#      args: -f ./sitecore-init/values.yaml -f ./sitecore-init/values-aks-${{ inputs.environment }}.yaml --set init-mssql.image.tag=${{ vars.SITECORE_VERSION }}
#      chart_name: sitecore-init
#      environment: ${{ inputs.environment }}
#      namespace: sitecore
      
